version: "3.4"

services:
  ########################################################
  # FRONTEND #############################################
  ########################################################
  frontend:
    image: gradido/frontend:development
    build:
      target: development
    environment:
      - NODE_ENV="development"
      # - DEBUG=true
      - NUXT_BUILD=/tmp/nuxt # avoid file permission issues when `rm -rf .nuxt/`
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      - frontend_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./frontend:/app
      
     

  ########################################################
  # BACKEND ##############################################
  ########################################################
  ## login server
  login-server:
    build: 
      context: ./login_server/
      target: login_server_debug
      dockerfile: Dockerfile.debug
    container_name: login-server
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    depends_on: 
      - mariadb
    networks: 
      - internal-net
    ports:
      - 1200:1200
      - 1201:1201
    volumes:
      - ./configs/login_server:/etc/grd_login
      - ./logs:/var/log/grd_login 
      - conan:/root/.conan
      
  ## community server (cakephp with php-fpm and nginx)
  nginx:
    build: 
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: nginx
    networks:
      - external-net
      - internal-net
    depends_on:
      - community-server
      - login-server
    ports:
      - 80:80
    volumes: 
      - ./logs:/var/log/nginx 
  
  ## for debugging mariadb
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    environment:
     - PMA_ARBITRARY=1
    restart: always
    ports:
     - 8074:80
    networks: 
     - internal-net
     - external-net
    volumes:
     - /sessions
  
  #  image: ocelotsocialnetwork/backend:development
  #  build:
  #    target: development
  #  environment:
  #    - NODE_ENV="development"
  #    - DEBUG=true
  #  volumes:
  #    # This makes sure the docker container has its own node modules.
  #    # Therefore it is possible to have a different node version on the host machine
  #    - backend_node_modules:/app/node_modules
  #    # bind the local folder to the docker to allow live reload
  #    - ./backend:/app

   
volumes:
  frontend_node_modules:
  conan:
  # backend_node_modules: