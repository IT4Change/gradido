name: gradido test CI

on: push

jobs:
  ##############################################################################
  # JOB: DOCKER BUILD TEST FRONTEND ############################################
  ##############################################################################
  build_test_frontend:
    name: Docker Build Test - Frontend
    runs-on: ubuntu-latest
    #needs: [nothing]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # FRONTEND ###############################################################
      ##########################################################################
      - name: Frontend | Build `test` image
        run: |
          docker build --target test -t "gradido/frontend:test" frontend/
          docker save "gradido/frontend:test" > /tmp/frontend.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-frontend-test
          path: /tmp/frontend.tar

  ##############################################################################
  # JOB: DOCKER BUILD TEST BACKEND #############################################
  ##############################################################################
  build_test_backend:
    name: Docker Build Test - Backend
    runs-on: ubuntu-latest
    #needs: [nothing]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # BACKEND ################################################################
      ##########################################################################
      - name: Backend | Build `test` image
        run: |
          docker build -f ./backend/Dockerfile --target test -t "gradido/backend:test" .
          docker save "gradido/backend:test" > /tmp/backend.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-backend-test
          path: /tmp/backend.tar

  ##############################################################################
  # JOB: DOCKER BUILD TEST DATABASE UP #########################################
  ##############################################################################
  build_test_database_up:
    name: Docker Build Test - Database up
    runs-on: ubuntu-latest
    #needs: [nothing]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # DATABASE UP ############################################################
      ##########################################################################
      - name: Database | Build `test_up` image
        run: |
          docker build --target test_up -t "gradido/database:test_up" database/
          docker save "gradido/database:test_up" > /tmp/database_up.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-database-test_up
          path: /tmp/database_up.tar

  ##############################################################################
  # JOB: DOCKER BUILD TEST MARIADB #############################################
  ##############################################################################
  build_test_mariadb:
    name: Docker Build Test - MariaDB
    runs-on: ubuntu-latest
    #needs: [nothing]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # BUILD MARIADB DOCKER IMAGE #############################################
      ##########################################################################
      - name: mariadb | Build `test` image
        run: |
          docker build --target mariadb_server -t "gradido/mariadb:test" -f ./mariadb/Dockerfile ./
          docker save "gradido/mariadb:test" > /tmp/mariadb.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-mariadb-test
          path: /tmp/mariadb.tar

  ##############################################################################
  # JOB: DOCKER BUILD TEST NGINX ###############################################
  ##############################################################################
  build_test_nginx:
    name: Docker Build Test - Nginx
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # BUILD NGINX DOCKER IMAGE ###############################################
      ##########################################################################
      - name: nginx | Build `test` image
        run: |
          docker build -t "gradido/nginx:test" nginx/
          docker save "gradido/nginx:test" > /tmp/nginx.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-nginx-test
          path: /tmp/nginx.tar

  ##############################################################################
  # JOB: LOCALES FRONTEND ######################################################
  ##############################################################################
  locales_frontend:
    name: Locales - Frontend
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # LOCALES FRONTEND #######################################################
      ##########################################################################
      - name: Frontend | Locales
        run: cd frontend && yarn && yarn run locales

  ##############################################################################
  # JOB: LINT FRONTEND #########################################################
  ##############################################################################
  lint_frontend:
    name: Lint - Frontend
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # LINT FRONTEND ##########################################################
      ##########################################################################
      - name: Frontend | Lint
        run: cd frontend && yarn && yarn run lint

  ##############################################################################
  # JOB: STYLELINT FRONTEND ####################################################
  ##############################################################################
  stylelint_frontend:
    name: Stylelint - Frontend
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # STYLELINT FRONTEND #####################################################
      ##########################################################################
      - name: Frontend | Stylelint
        run: cd frontend && yarn && yarn run stylelint

  ##############################################################################
  # JOB: LINT BACKEND ##########################################################
  ##############################################################################
  lint_backend:
    name: Lint - Backend
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # LINT BACKEND ###########################################################
      ##########################################################################
      - name: backend | Lint
        run: cd database && yarn && cd ../backend && yarn && yarn run lint

  ##############################################################################
  # JOB: LOCALES BACKEND #######################################################
  ##############################################################################
  locales_backend:
    name: Locales - Backend
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # LOCALES BACKEND #####################################################
      ##########################################################################
      - name: Backend | Locales
        run: cd backend && yarn && yarn locales
  
  ##############################################################################
  # JOB: LINT DATABASE UP ######################################################
  ##############################################################################
  lint_database_up:
    name: Lint - Database Up
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # LINT DATABASE ##########################################################
      ##########################################################################
      - name: Database | Lint
        run: cd database && yarn && yarn run lint

  ##############################################################################
  # JOB: UNIT TEST FRONTEND  ###################################################
  ##############################################################################
  unit_test_frontend:
    name: Unit tests - Frontend
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # UNIT TESTS FRONTEND ####################################################
      ##########################################################################
      - name: Frontend | Unit tests
        run: cd frontend && yarn && yarn run test

  ##############################################################################
  # JOB: UNIT TEST BACKEND  ####################################################
  ##############################################################################
  unit_test_backend:
    name: Unit tests - Backend
    runs-on: ubuntu-latest
    needs: [build_test_mariadb]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # DOWNLOAD DOCKER IMAGES #################################################
      ##########################################################################
      - name: Download Docker Image (Mariadb)
        uses: actions/download-artifact@v3
        with:
          name: docker-mariadb-test
          path: /tmp
      - name: Load Docker Image
        run: docker load < /tmp/mariadb.tar
      ##########################################################################
      # UNIT TESTS BACKEND #####################################################
      ##########################################################################
      - name: backend | docker-compose mariadb
        run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up --detach --no-deps mariadb
      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash
      - name: backend | docker-compose database
        run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up --detach --no-deps database
      - name: backend Unit tests | test
        run: cd database && yarn && yarn build && cd ../backend && yarn && yarn test

  ##########################################################################
  # DATABASE MIGRATION TEST UP + RESET #####################################
  ##########################################################################
  database_migration_test:
    name: Database Migration Test - Up + Reset
    runs-on: ubuntu-latest
    #needs: [nothing]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v3
      ##########################################################################
      # DOCKER COMPOSE DATABASE UP + RESET #####################################
      ##########################################################################
      - name: database | docker-compose
        run: docker-compose -f docker-compose.yml up --detach mariadb
      - name: database | up
        run: docker-compose -f docker-compose.yml run -T database yarn up
      - name: database | reset
        run: docker-compose -f docker-compose.yml run -T database yarn reset
